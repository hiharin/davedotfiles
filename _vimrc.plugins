call plug#begin('~/.vim/plugins')

let g:plug_window = "above new"

"
" General maps and functions
"

" play nice with Vim sessions: close all extraneous buffers before leaving vim
autocmd VimLeavePre * :tabdo call CloseExtraBuffers()
function! CloseExtraBuffers()
    :NERDTreeClose
    :TagbarClose
    :GundoHide
endfunction

"
" Plugins and related settings
"

    " fancypants status line. Powerline patched fonts require manual install
Plug 'bling/vim-airline'
let g:airline_powerline_fonts = 1
let g:airline_theme="base16"
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 0

    " nice motion plugin, relieves 'w' spam
Plug 'Lokaltog/vim-easymotion'

    " file tree
Plug 'scrooloose/nerdtree'
nmap <leader>nt :NERDTreeFind<CR>

    " NERDTree syncs and plays better across tabs
"Plug 'jistr/vim-nerdtree-tabs'
"map <C-f> :NERDTreeMirrorToggle<CR>
"let g:nerdtree_tabs_open_on_gui_startup=0

    " streamlined access to file tree (netrw, NERDtree)
Plug 'tpope/vim-vinegar'

    " syntax checking and reporting (YCM integration removed in Jan 2014)
Plug 'scrooloose/syntastic'

    " multi-cursors ala Sublime Text
Plug 'terryma/vim-multiple-cursors'

    " syntax autocompletion and intellisense. requires llvm/clang for c/c++
Plug 'Valloric/YouCompleteMe'
let g:ycm_enable_diagnostic_signs = 0
let g:ycm_enable_diagnostic_highlighting = 1
let g:ycm_add_preview_to_completeopt = 1
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_confirm_extra_conf = 0
nnoremap <F5> :YcmForceCompileAndDiagnostics<CR>
nnoremap <leader>gd :YcmCompleter GoTo<CR>

    " adds a window that shows all of the functions in the current file
Plug 'majutsushi/tagbar'
let g:tagbar_autoclose = 1
let g:tagbar_autofocus = 1
map <leader>tb :TagbarToggle<CR>

    " visual undo tree. nice for when you need to go back to a branch
Plug 'sjl/gundo.vim'
map <leader>u :GundoToggle<CR>

    " ctrl-p for go to anything
Plug 'kien/ctrlp.vim'
nnoremap <leader>p :CtrlPTag<CR>
vnoremap <leader>p :CtrlPTag<CR>
if executable('ag')
    let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif

    " switch between header and source
Plug 'vim-scripts/a.vim'
map <leader>a :A<CR>

    " vim front end for 'the silver searcher'
Plug 'rking/ag.vim'
let g:aghighlight = 1
let g:agprg="ag --column --smart-case"
nnoremap <leader>/ :call SearchCurrentWord() <Bar> AgFromSearch!<CR>

    " provides hg/git change status in the left gutter
Plug 'mhinz/vim-signify'

    " shows function/variable signature on mouse-hover when available
"Plug 'vim-scripts/Tag-Signature-Balloons'

    " show indent levels
Plug 'nathanaelkane/vim-indent-guides'
let g:indent_guides_start_level = 2
let g:indent_guides_guide_size = 1
nnoremap <leader>i :IndentGuidesToggle<CR>

    " colorschemes
Plug 'w0ng/vim-hybrid'
Plug 'chriskempson/base16-vim'

    " improved vim session management
Plug 'tpope/vim-obsession'

    " browse and manage open buffers
Plug 'jlanzarotta/bufexplorer'

    " commands for modifying quotes, brackets, etc.
Plug 'tpope/vim-surround'

    " generates fancy, airline-style shell prompt
Plug 'edkolev/promptline.vim'

Plug 'scrooloose/nerdcommenter'

Plug 'aklt/plantuml-syntax'

    " highlights all search matches, not just the first
Plug 'haya14busa/incsearch.vim'
map /  <Plug>(incsearch-forward)
map ?  <Plug>(incsearch-backward)
map g/ <Plug>(incsearch-stay)

    " fancy start menu when opening vim without a filename
Plug 'mhinz/vim-startify'

call plug#end()
